@using BrgyIS.Models
@{
    ViewBag.Title = "Staff";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="pagetitle">
    <h1>@ViewBag.Title</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
            <li class="breadcrumb-item active">@ViewBag.Title</li>
        </ol>
    </nav>
</div>

<div class="card">
    <div class="card-body">
        <div class="card-title">@ViewBag.Title</div>
        <div class="row row-cols-lg-auto g-1 align-items-center mt-3">
            <div class="col" aria-action="Add">
                <p>
                    <a href="#" data-bs-toggle="modal" data-bs-target="#actionModal" data-bind="click:NewData"><i class="fa fa-plus-circle"></i> New record</a>
                </p>
            </div>
        </div>
        <div class="table-responsive">
            <table id="data" class="table table-light table-hover table-striped table-boredered" style="font-size:0.9rem; with:100%;">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Position</th>
                        <th>Instated</th>
                        <th>Active</th>
                        <th></th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>Name</th>
                        <th>Position</th>
                        <th>Instated</th>
                        <th>Active</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="actionModal" aria-labelledby="actionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div data-bind="html: Content" class="modal-content">

        </div>
    </div>
</div>

@section scripts {
    <script>

        function officialsModel() {
            var self = this;
            self.SelectedValue = ko.observable({});
            self.Content = ko.observable(null);

            self.NewData = () => {
                $.get('@Url.Action("Create", "Staff", new { area = "" })', null, self.Content);
            }

            self.EditData = (ID) => {
                $.get('@Url.Action("Edit", "Staff", new { area = "" })', { ID: ID }, self.Content);
            }

            self.table = $('#data').DataTable({
                layout: {
                    top: {
                        buttons: [{ extend: 'print', exportOptions: { columns: ':visible' } }, { extend: 'excel', exportOptions: { columns: ':visible' } }, { extend: 'colvis', exportOptions: { columns: ':visible' } }]
                    }
                },
                ajax: { url: '@Url.Action("List", "Staff", new { area = ""})' },
                columns: [{ data: 'Name' }, { data: 'PositionName' }, { data: 'Instated', render: (data) => { return moment(data).format('MMM-DD-YYYY'); } }, { data: 'Active' },
                {
                    data: null,
                    render: (data) => { return `<a href='#' data-bs-toggle="modal" data-bs-target="#actionModal" onclick="model.EditData(${data.ID})"><i class="fa fa-edit"></i></a>`; }
                }],
                ordering: false,
                searching: true,
                stateSave: true
            });
           
        }
        var model = new officialsModel();
        ko.applyBindings(model);
    </script>
}