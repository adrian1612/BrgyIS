@using BrgyIS.Models
@{
    ViewBag.Title = "Dashboard";
}

<div class="pagetitle">
    <h1>Dashboard</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item active"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
        </ol>
    </nav>
</div>

<section class="section dashboard">
    <div class="row">
        <div class="col-xxl-4 col-md-6">
            <div class="card info-card sales-card">

                <div class="filter">
                    <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                    <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                        <li class="dropdown-header text-start">
                            <h6>Filter</h6>
                        </li>
                        <li class="dropdown-item">
                            <a class="dropdown-item-text" target="_blank" href="@Url.Action("Statistic", "Person", new { area = "" })">Print Statistic</a>
                        </li>
                    </ul>
                </div>

                <div class="card-body">
                    <h5 class="card-title">Users <span>| total</span></h5>

                    <div class="d-flex align-items-center">
                        <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                            <i class="bi bi-people"></i>
                        </div>
                        <div class="ps-3">
                            <h6>@(new tbl_User().List()?.Count) Users</h6>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-xxl-4 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">Gender Statistic</div>
                    <div id="genderStatistic" style="height: 80px;"></div>
                </div>
            </div>
        </div>
        <div class="col-xxl-4 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">Señor/PWD Statistic</div>
                    <div id="SrPWDStatistic" style="height: 80px;"></div>
                </div>
            </div>
        </div>
        <div class="col-xxl-4 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">Civil Status</div>
                    <div id="CivilStatistic" style="height: 80px;"></div>
                </div>
            </div>
        </div>
        <div class="col-xxl-4 col-md-6">
            <div class="card">
                <div class="card-body">
                    <div class="card-title">Occupation</div>
                    <div id="OccuStatistic" style="height: 80px;"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div id="map" style="height: 700px; width: 100%;"></div>
        </div>
    </div>
</section>

@Scripts.Render("~/bundles/echart")
@section scripts {
    
    <script>
        var gender = echarts.init(document.getElementById('genderStatistic'));
        var srpwd = echarts.init(document.getElementById('SrPWDStatistic'));
        var civil = echarts.init(document.getElementById('CivilStatistic'));
        var prop = echarts.init(document.getElementById('OccuStatistic'));
        function chartModel() {
            var self = this;

            self.Get = () => {
                $.get('@Url.Action("Get", "MapSetting", new { area = "" })', null, (d) => {
                    initMap(d);
                });
            }

            self.Get();
            self.setGender = (d) => {
                var colors = ['cyan', 'pink'];
                gender.setOption({
                    dataset: {
                        dimensions: ['Gender', 'Count'],
                        source: d
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    grid: {
                        top: 0,
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'value'
                    },
                    yAxis: {
                        type: 'category'
                    },
                    series: [
                      {
                          type: 'bar',
                          itemStyle: {
                              normal: {
                                  color: function (params) {
                                      // Set alternating colors for each bar
                                      var index = params.dataIndex;
                                      return new echarts.graphic.LinearGradient(0, 0, 0, 1, [
                                          { offset: 0, color: colors[index] },
                                          { offset: 1, color: colors[index] }
                                      ]);
                                  }
                              }
                          }
                      }
                    ]
                });
            }
            self.setSrPwd = (d) => {
                srpwd.setOption({
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    grid: {
                        top: 0,
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'value'
                    },
                    yAxis: {
                        type: 'category',
                        data: ['PWD', 'Señor']
                    },
                    series: [
                      {
                          data: [{ value: d.PWD, itemStyle: { color: '#fffee0' } }, { value: d.Senior, itemStyle: { color: 'silver' } }],
                          type: 'bar'
                      }
                    ]
                });
            }
            self.setcivil = (d) => {
                civil.setOption({
                    dataset: {
                        dimensions: ['Status', 'Count'],
                        source: d
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    grid: {
                        top: 0,
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'value'
                    },
                    yAxis: {
                        type: 'category'
                    },
                    series: [{type: 'bar'}]
                });
            }
            self.setprop = (d) => {
                prop.setOption({
                    dataset: {
                        dimensions: ['Profession', 'Count'],
                        source: d
                    },
                    tooltip: {
                        trigger: 'axis',
                        axisPointer: {
                            type: 'shadow'
                        }
                    },
                    grid: {
                        top: 0,
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'value'
                    },
                    yAxis: {
                        type: 'category'
                    },
                    series: [{ type: 'bar' }]
                });
            }

            $.get('@Url.Action("Statistic", "Home", new { area = "" })', null, (d) => {
                self.setGender(d.Gender);
                self.setSrPwd(d.SrPwd);
                self.setcivil(d.Civil);
                self.setprop(d.Prop);
            });

        }

        var model = new chartModel();
        ko.applyBindings(model);

    </script>
    
}

<!--AIzaSyAMqWgM1_T6tAN0wtJbCXSByuIzB2yYzkU-->